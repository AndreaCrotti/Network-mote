#+AUTHOR: Andrea Crotti, Marius Grysla, Oscar Dustmann
# TODO: change name of the project maybe?
MotNet

* Next Improvements
** DONE add support for adaptative compression
   CLOSED: [2010-07-31 Sab 18:21]
   - CLOSING NOTE [2010-07-31 Sab 18:21]
** DONE add cleaning exit code on exit
   CLOSED: [2010-08-02 Lun 11:21]
   - CLOSING NOTE [2010-08-02 Lun 11:21] \\
     Using signal and a generic closing function!
     
** DONE add support for an intermediate node that forwards everything
   CLOSED: [2010-08-13 Ven 17:52]
   - CLOSING NOTE [2010-08-13 Ven 17:53] \\
     working depending on humidity and luck

* Goal
  The goal of this project is to create a create a network between motes.
  Supposing we have mote A attached to a computer with an internet connection and mote b is attached to a computer without internet connection.

  Then traversing a theoretically arbitrary network of motes we can let B connect to the internet through the network.

* Architecture
  
* Files
  This is the tree of files in our application
  - driver
    In this directory we have client and gateway program, written in C for linux systems with some bash scripts.
    + reconstruct.c
      this module in charge of reconstructing the chunks we get from from the network

    + chunker.c
      functions to split the message into many chunks

    + client.c
      start the client version of the program

    + gateway.c
      start the gateway

    + tunnel.c
      manage the tunnel (open close write read)

    + setup.c
      all the functions used both by the client and the gateway

    + structs.c
      contain some useful functions to manage our own data structures

    + motecomm.c
      low level communication between motes and driver program

    + glue.c

  - shared
    In this directory we keep the data structures definition that we use both from the client/gateway program and the program installed on the motes
    + structs.h
      This contains the basic data structures we use communicate with the motes.
      They are shared between the driver program and program that runs on the motes

  - motes-simple
    Contains the mote program that was used in the presentation.
    + SimpleMoteAppC.nc
      The TinyOS configuration file.

    + SimpleMoteAppP.nc
      Here the implementation is done.

    + 

