>#+AUTHOR: Andrea Crotti, Marius Grysla, Oscar Dustmann
# TODO: change name of the project maybe?
MotNet

* Goal
  The oal of this project is to create a create a network between motes.
  Supposing we have mote A attached to a computer with an internet connection and mote b is attached to a computer without internet connection.

  Then traversing a theoretically arbitrary network of motes we can let B connect to the internet through the network.


* Architecture

* Coding style

* Files
  This is the tree of files in our application
  - driver
    In this directory we have client and gateway program, written in C for linux systems with some bash scripts.
    + reconstruct.c
      this module in charge of reconstructing the chunks we get from from the network

    + chunker.c

    + client.c

    + gateway.c

    + tunnel.c

    + structs.c
      contain some useful functions to manage our own data structures

    + motecomm.c

    + glue.c

  - shared
    In this directory we keep the data structures definition that we use both from the client/gateway program and the program installed on the motes
    + structs.h
      myPacketHeader and ipv6 header (ad defined in *blip*) structure manipulation
      We use for example very often the payload_t structure to manage data

#+begin_src c
typedef struct {
  stream_t const* stream;
  streamlen_t len;
} payload_t;
#+end_src

  - motes

  - simple-motes


* Next Improvements
** TODO add support for adaptative compression
** TODO add a simple handshaking protocol removing the ugly forced sleep
** TODO add support for an intermediate node
** TODO remove code duplication from client/gateway source files
** TODO (optional) some support for multiple clients
** TODO uniform code style (_ and doc)
** TODO do some real automated tests to compute real speed of the connection
** TODO remove all the (void)var things, if there is a variable use it ;)
