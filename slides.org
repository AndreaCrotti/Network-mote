#+STARTUP: beamer
#+OPTIONS: toc:nil
#+LANGUAGE: it
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [presentation]
#+BEAMER_FRAME_LEVEL: 2
#+BEAMER_HEADER_EXTRA: \usetheme{Berlin} \usecolortheme{default}
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %10BEAMER_envargs(Env Args) %4BEAMER_col(Col) %8BEAMER_extra(Extra)
#+TITLE: TOSNET
#+AUTHOR: Andrea Crotti, Marius Grysla, Oscar Dustmann

* TOSNET
** Problem (1 slide maybe some nice image)

** Driver implementation
   - tun / tap
   - compression

** Event driven approach
   Listen on two different devices, using *select* and handlers
   
** Compression
   - With ipv6 header and blip it would be dramatically too slow.
   - Header must be as small as possible

** Mote program
   - Very simple approach

** Call graph
   #+ATTR_LATEX: height=\textheight
   [[file:images/main_c.png]]

** Statistics

* Speed?
  
* Conclusions and further work
** 
   

#* Emacs
## ** Perché usarlo?
##    - potente
##    - estensibile
##    - 30 anni di storia
##    - i "veri programmatori" usano emacs
#
#** La miglior curva d'apprendimento
#    #+ATTR_LATEX: width=\textwidth
#   [[file:images/curves.jpg]]
#
#** Architettura
#   - Tutto è \alert{buffer}
#   - Configurazione è un *cittadino di primo livello*
#   - 1 *Major mode* e n *Minor modes* per buffer
#
#* Pacchetti esterni
#** Configurazione minimale
#   - python-mode
#   - yasnippet
#   - auto complete
#   - flymake
#   - org-mode
#
#** Flymake
#   - Errori di compilazione/check *direttamente* nel buffer.
#   - Funzionante potenzialmente con qualsiasi linguaggio.
#
#*** Python                                                          :B_block:
#    :PROPERTIES:
#    :BEAMER_env: block
#    :END:
#    In python esecuzione in background dei tool
#    - epylint
#    - pyflakes
#    - pep8
#
#** Yasnippet
#  - Textmate like snippets
#  - Possono eseguire codice elisp
#  Ad esempio python class snippet:
#
#*** Classe                                                        :B_example:
#    :PROPERTIES:
#    :BEAMER_env: example
#    :END:
##+begin_src python
#  class ${1:class}(${2:object}):
#      $0
##+end_src
#
## ** Python mode
##    - Syntax highlighting
##    - electric tabs
##    - Interazione con l'interprete python
#
#* Org mode/babel
#** Org mode
#*** Origine                                                         :B_block:
#    :PROPERTIES:
#    :BEAMER_env: block
#    :END:
#
#    Creato da /Carsten Dominik/ inizialmente per gestire le note.
#
#\pause
#*** Portabile                                                       :B_block:
#    :PROPERTIES:
#    :BEAMER_env: block
#    :END:
#    Testo semplice è l'*unico* vero formato \alert{portabile}
#    - ricerca
#    - revision control
#
#** Possibili utilizzi
#   - gestione appunti/conoscenza
#   - gestione progetto
#   - literate programming
#   - foglio di calcolo
#   - ...e molto altro
#
#** Opzioni di esportazione
#   - html
#   - latex
#   - ascii
#   - docbook
#   - ics
#   - xoxo
#   - freemind
#   - funzioni di esportazione *generica*
#
#** Org babel
#   Estensione di org-babel per /literate programming/ e /reproducible research/.
#   Linguaggi supportati alla versione /6.35f/:
#
#*** columns                                                       :B_columns:
#    :PROPERTIES:
#    :BEAMER_env: columns
#    :END:
#
#**** .5                                                            :B_column:
#     :PROPERTIES:
#     :BEAMER_env: column
#     :END:
#     - R
#     - asymptote
#     - clojure
#     - css
#     - ditaa
#     - dot
#     - emacs-lisp
#     - gnuplot
#     - haskell
#
#**** .5                                                            :B_column:
#     :PROPERTIES:
#     :BEAMER_col: .5
#     :BEAMER_env: column
#     :END:
#     - latex
#     - ocaml
#     - perl
#     - python
#     - ruby
#     - sass
#     - screen
#     - sh
#     - sql
#
#* Real programmers
#** Real programmers
#   #+ATTR_LATEX: width=\textwidth
#   [[file:images/real_programmers.png]]
#
